name: Build & Deploy Next.js to Azure Web App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      NOTION_API_KEY:       ${{ secrets.NOTION_API_KEY }}
      NOTION_DB_ID:         ${{ secrets.NOTION_DB_ID }}
      TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
      TWITTER_USERNAME:     ${{ secrets.TWITTER_USERNAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Create startup script
        working-directory: frontend
        run: |
          cat > startup.sh << 'EOF'
          #!/bin/bash
          echo "Starting Next.js application..."
          
          # Install dependencies if node_modules is missing
          if [ ! -d "node_modules" ]; then
            echo "Installing dependencies..."
            npm ci
          fi
          
          # Build the application if .next is missing
          if [ ! -d ".next" ]; then
            echo "Building application..."
            npm run build
          fi
          
          # Start the application
          echo "Starting the application..."
          npm start
          EOF
          
          chmod +x startup.sh

      - name: Package for Azure with startup script
        working-directory: frontend
        run: |
          # Package source files and let Azure build
          files_to_zip="pages components lib styles public package.json package-lock.json startup.sh"
          
          # Include optional files if they exist
          [ -f next.config.js ] && files_to_zip="$files_to_zip next.config.js"
          [ -f tailwind.config.js ] && files_to_zip="$files_to_zip tailwind.config.js"
          [ -f postcss.config.js ] && files_to_zip="$files_to_zip postcss.config.js"
          [ -f tsconfig.json ] && files_to_zip="$files_to_zip tsconfig.json"
          [ -d "app" ] && files_to_zip="$files_to_zip app"
          [ -d "src" ] && files_to_zip="$files_to_zip src"
          
          # Create the deployment package
          zip -r ../deploy-package.zip $files_to_zip

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        env:
          SCM_DO_BUILD_DURING_DEPLOYMENT: 'true'
        with:
          app-name: 'dutchbrat-website'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_8333198B22C94E4F8045643464BA21A2 }}
          package: './deploy-package.zip'
# force deployment